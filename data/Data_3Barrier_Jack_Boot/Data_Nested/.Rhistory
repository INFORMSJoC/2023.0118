#load packages
suppressWarnings(library(lmtest))
suppressWarnings(library(tseries))
suppressWarnings(library(dplyr))
suppressWarnings(library(reshape2))
suppressWarnings(library(ggplot2))
suppressWarnings(library(ggpubr))
setwd("/Users/liangguo/Desktop/PhD/博二下-梁果/高等应用统计")
a <- list.files("Stocks")
dir <- paste("./Stocks/",a,sep="")   #path dir
num_stock <- 50  #number of stock
reg_num <- 500   #number of train
test_num <- 100
index_pre <- seq(100,7000,by = 10)
index <- vector()
#Remove files with small sample size
for (i in 1:length(index_pre)){
x <- try(read.csv(file = dir[index_pre[i]],header=T,sep=","))
while (length(index) < num_stock && !inherits(x, 'try-error')){
if (nrow(x) > reg_num + test_num){
index <- append(index,index_pre[i])
}
break
}
if (length(index) == num_stock){
break
}
}
adf_matrix <- matrix(1,2,num_stock)
for (i in 1:num_stock){
x <- read.csv(file = dir[index[i]],header=T,sep=",")
x <- x[,-c(2,3,4,6,7)]
reg_end <- max(nrow(x) - test_num,floor(nrow(x)/2))
reg_start <- max(1,reg_end - reg_num)
sta_x <- suppressWarnings(adf.test(x[reg_start:reg_end,2]))
adf_matrix[1,i] = sta_x[["p.value"]]
sta_diff_x <- suppressWarnings(adf.test(diff(x[reg_start:reg_end,2])))
adf_matrix[2,i] = sta_diff_x[["p.value"]]
}
adf_matrix[,1:10]
s <- read.csv(file = dir[index[1]],header=T,sep=",")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
s <- read.csv(file = dir[index[1]],header=T,sep=",")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
s <- read.csv(file = dir[index[1]],header=T,sep=",")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
setEPS()
postscript("whatever.eps")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
setEPS()
postscript("whatever.eps")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
dev.off()
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
ggplot()+
geom_line(data = s, aes(x=as.Date(s[,1]), y = s[,5]),color="black")+
geom_line(data = s, aes(x=as.Date(s[,1]), y = c(0,diff(s[,5]))),color = "red")+
xlab("Time")+
ylab("")
pvalue_matrix <- matrix(1,num_stock,num_stock)
for (i in 1:num_stock){
for (j in i:num_stock){
if (i != j){
x <- read.csv(file = dir[index[i]],header=T,sep=",")
x <- x[,-c(2,3,4,6,7)]
y <- read.csv(file = dir[index[j]],header=T,sep=",")
y <- y[,-c(2,3,4,6,7)]
data = merge(x,y,by = "Date")
reg_end <- max(nrow(data) - test_num,floor(nrow(data)/2))
reg_start <- max(1,reg_end - reg_num)
reg <- lm(data[reg_start:reg_end,2]~data[reg_start:reg_end,3])
error <- residuals(reg)
ts <- suppressWarnings(adf.test(error))
pvalue <- ts[["p.value"]]
pvalue_matrix[i, j] <- pvalue
}
}
}
#heat map
a <- melt(pvalue_matrix)
ggplot(data = a, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() + xlab("Stock index") + ylab("stock index")
a <- melt(pvalue_matrix)
ggplot(data = a, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() + xlab("Stock index") + ylab("stock index")
findstock <- which(pvalue_matrix > 0.02)
findstock2 <- which.min(pvalue_matrix[findstock])
findstock <- findstock[as.numeric(findstock2)]
index_stock2 <- ceiling(findstock/num_stock)
index_stock1 <- findstock - ((index_stock2-1)*num_stock)
stock1 <- read.csv(file = dir[index[index_stock1]],header=T,sep=",")
stock1 <- stock1[,-c(2,3,4,6,7)]   #660
stock2 <- read.csv(file = dir[index[index_stock2]],header=T,sep=",")
stock2 <- stock2[,-c(2,3,4,6,7)]   #740
data = merge(stock1,stock2,by = "Date")
test_num <- 721
reg_num <- 2000
reg_end <- max(nrow(data) - test_num,floor(nrow(data)/2))
reg_start <- max(1,reg_end - reg_num)
reg <- lm(data[reg_start:reg_end,2]~data[reg_start:reg_end,3])
error <- residuals(reg)
ts <- adf.test(error)
pvalue <- ts[["p.value"]]
coff <- as.numeric(reg[["coefficients"]][2])
average <- mean(data[reg_start:reg_end,2]-coff*data[reg_start:reg_end,3])
std <- sd(data[reg_start:reg_end,2]-coff*data[reg_start:reg_end,3])
ggplot()+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,2]-coff*data[,3]),color = "red")+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,2]))+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,3]))+
xlab("Time")+
ylab("value of portfolio")
ggplot()+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,2]-coff*data[,3]),color = "red")+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,2]))+
geom_line(data = data, aes(x=as.Date(data[,1]), y = data[,3]))+
xlab("Time")+
ylab("value of portfolio")
money <- vector()
trade_money <- vector()
profit <- vector()
money <- append(money,10000)
volume <- 100
#credit <- 5000
flag <- vector()
flag <- append(flag,list(c("初始","平仓")))
trade <- 0
for(i in (nrow(data)-test_num):nrow(data)){
if (flag[[length(flag)]][2] == "平仓" && data[i,2]-coff*data[i,3] > average + 0.75*std){
money <- append(money, money[length(money)] + volume*(data[i,2]-coff*data[i,3]))
flag <- append(flag,list(c(data[i,1],"做空")))
trade <- trade + 1
}
if (flag[[length(flag)]][2] == "平仓" && data[i,2]-coff*data[i,3] < average - 0.75*std){
money <- append(money, money[length(money)] - volume*(data[i,2]-coff*data[i,3]))
flag <- append(flag,list(c(data[i,1],"做多")))
trade <- trade + 1
}
if (flag[[length(flag)]][2] == "做空" && data[i,2]-coff*data[i,3] - average < 0){
money <- append(money, money[length(money)] - volume*(data[i,2]-coff*data[i,3]))
trade <- trade + 1
flag <- append(flag,list(c(data[i,1],"平仓")))
trade_money <- append(trade_money,money[length(money)-1]-money[length(money)])
profit <- append(profit,money[length(money)]-money[length(money)-2])
}
if (flag[[length(flag)]][2] == "做多"&& data[i,2]-coff*data[i,3] - average > 0){
money <- append(money, money[length(money)] + volume*(data[i,2]-coff*data[i,3]))
trade <- trade + 1
flag <- append(flag,list(c(data[i,1],"平仓")))
trade_money <- append(trade_money,money[length(money)-2]-money[length(money)-1])
profit <- append(profit,money[length(money)]-money[length(money)-2])
}
if (flag[[length(flag)]][2] == "做空" && data[i,2]-coff*data[i,3] - average > 2*std && which(data[,1] == flag[[length(flag)]][1]) != i){
money <- append(money, money[length(money)] - volume*(data[i,2]-coff*data[i,3]))
flag <- append(flag,list(c(data[i,1],"平仓")))
trade <- trade + 1
trade_money <- append(trade_money,money[length(money)-1]-money[length(money)])
profit <- append(profit,money[length(money)]-money[length(money)-2])
break
}
if (flag[[length(flag)]][2] == "做多" && data[i,2]-coff*data[i,3] - average < -2*std && which(data[,1] == flag[[length(flag)]][1]) != i){
money <- append(money, money[length(money)] + volume*(data[i,2]-coff*data[i,3]))
flag <- append(flag,list(c(data[i,1],"平仓")))
trade <- trade + 1
trade_money <- append(trade_money,money[length(money)-2]-money[length(money)-1])
profit <- append(profit,money[length(money)]-money[length(money)-2])
break
}
}
rate <- (1 + sum(profit)/abs(sum(trade_money)))**(250/(which(data[,1] == flag[[length(flag)]][1]) - which(data[,1] == flag[[2]][1]))) - 1
flag[1:5]
c("rate", rate)
plot(as.Date(data[reg_start:nrow(data),1]), data[reg_start:nrow(data),2]-coff*data[reg_start:nrow(data),3],type = "l",xlab="Time",ylab="value of portfolio")
lines(as.Date(data[reg_start:nrow(data),1]),rep(average,nrow(data) - reg_start + 1))
lines(as.Date(data[reg_start:nrow(data),1]),rep(average-0.75*std,nrow(data) - reg_start + 1),col="red")
lines(as.Date(data[reg_start:nrow(data),1]),rep(average+0.75*std,nrow(data) - reg_start + 1),col="red")
for (i in 2:length(flag)){
if (flag[[i]][2] == "平仓"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='blue',cex = 1.5,pch=18)
}
if (flag[[i]][2] == "做多"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='green',cex = 1.5,pch=18)
}
if (flag[[i]][2] == "做空"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='red',cex = 1.5,pch=18)
}
}
plot(as.Date(data[reg_start:nrow(data),1]), data[reg_start:nrow(data),2]-coff*data[reg_start:nrow(data),3],type = "l",xlab="Time",ylab="value of portfolio")
lines(as.Date(data[reg_start:nrow(data),1]),rep(average,nrow(data) - reg_start + 1))
lines(as.Date(data[reg_start:nrow(data),1]),rep(average-0.75*std,nrow(data) - reg_start + 1),col="red")
lines(as.Date(data[reg_start:nrow(data),1]),rep(average+0.75*std,nrow(data) - reg_start + 1),col="red")
for (i in 2:length(flag)){
if (flag[[i]][2] == "平仓"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='blue',cex = 1.5,pch=18)
}
if (flag[[i]][2] == "做多"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='green',cex = 1.5,pch=18)
}
if (flag[[i]][2] == "做空"){
points(as.Date(flag[[i]][1]),data[which(data[,1] == flag[[i]][1]),2] - coff*data[which(data[,1] == flag[[i]][1]),3],col='red',cex = 1.5,pch=18)
}
}
getwd()
setwd("/Users/liangguo/Desktop/Numerical Experiments/BootJackDim1-10/3Barrier_adaptive_nonuniform")
tewst <- read.table("AdaptiveNonuniform_Budget=100000_epoch=10000_n0=500_m0=2_d=10.txt")
test <- read.table("AdaptiveNonuniform_Budget=100000_epoch=10000_n0=500_m0=2_d=10.txt")
test[:,1]
test(:,1)
test[,1]
a <- test[,1]
mean((a - 0.1)**2)
sqrt(0.0003108993)/0.1
mean(a - 0.1)
var(a)
View(test)
mean(test[,3])
test[993,] = []
test = test[-993,]
mean((a - 0.1)**2)
sqrt(0.0003108993)/0.1
max(test[,1])
find(test[,1] = max(test[,1]))
find(test[,1] > 0.25)
a <- test[,1]
mean((a - 0.1)**2)
sqrt(0.0003108993)/0.1
sqrt(0.0002908237)/0.1
setwd("/Users/liangguo/Desktop/Numerical Experiments/BootJackDim1-10/3Barrier_Jack_Boot/Data/Data_Nested")
Nested = read.table("Nested_Budget=100000_m0=n0=100_d=10.txt")
mean(Nested[,7])
which.min(test[,3])
test = test[-276,]
which.min(test[,3])
test = test[-751,]
which.min(test[,3])
View(test)
test = test[-751,]
a <- test[,1]
mean((a - 0.1)**2)
sqrt(0.0002883617)/0.1
mean(a - 0.1)
